# -*- orgstrap-cypher: sha256; orgstrap-norm-func-name: orgstrap-norm-func--prp-1\.1; orgstrap-block-checksum: c4ba24f079c6d277c1dd543b46bd9c6ccc73f794a45ffbe859c4ae08256ce769; lexical-binding: t -*-
# [[orgstrap][jump to the orgstrap block for this file]]
#+title: protcur queries
#+startup: showall
#+property: header-args :eval no-export

Links to private groups/docs/sheets are in the =Protc paper= google doc.

*[[QUIT:][Save and Quit]]*

*[[KILL:][Quit Without Saving]]*

* Settings
:PROPERTIES:
:visibility: folded
:END:
*[[FOLD-HEADLINE:][Hide Settings for Future Sessions]]*
** Text size
*[[TEXT-LARGER:][Larger  +]]*
*[[TEXT-RESET:][Reset   0]]*
*[[TEXT-SMALLER:][Smaller -]]*
* Getting Started
:PROPERTIES:
:visibility: folded
:END:
** Install Emacs
:PROPERTIES:
:visibility: folded
:END:
# This section is hidden by default since if this file is open in
# Emacs you probably don't need to see this section.
This file needs Emacs 27 or later to run. You can [[https://www.gnu.org/software/emacs/download.html][install]] Emacs
manually on [[https://emacsformacosx.com/][Mac]] or [[http://mirrors.ocf.berkeley.edu/gnu/emacs/windows/emacs-27/][Windows]]. If you are on Linux install Emacs using
your system's package manager. Some distros do not package the latest
version of Emacs in their main tree. If you find yourself in this
situation, there might be an alternate repository (e.g. [[PPA][PPA]] for Ubuntu)
that has newer versions.

# Don't use get-emacs yet, it isn't ready.
# You could also try the orgstrap [[https://github.com/tgbugs/orgstrap/blob/master/get-emacs.el.sh.ps1][get-emacs script]] that attempts to
# install Emacs via your platform's package manager. If a package
# manager is not found the script will install [[https://brew.sh/][Homebrew]] on Mac and
# [[https://chocolatey.org/][Chocolaty]] on Windows and then use that to install Emacs. See the
# [[https://github.com/tgbugs/orgstrap#bootstrapping-to-emacs-bootstrapping-to-org][orgstrap docs]] for details.
** First Run
The first time you open this file you will be prompted to accept
Local Variables. You should type exclamation mark (=!=) to permanently
store these values so that you are not prompted again in the future.

The local variables are used by [[https://github.com/tgbugs/orgstrap][orgstrap]] to ensure that all the
functionality needed by this file is installed and working.

After accepting the local variables Emacs will download and install
any missing packages that are needed for this file. You may see the
compile log appear during this process.

Once all packages have been successfully installed an the system is
fully functional this heading will be collapsed by default.

If you would like to inspect the file and local variables first, you
can instead answer =n= to inspect the file (it will look a bit
different and Emacs will behave differently because this file sets
more user friendly defaults). Once you are satisfied that the file is
safe you can open the file again, or you can run =M-x= =org-mode=
which will reload the local variables and allow you to accept them.
* Tutorial
After you are done with this tutorial you can hide it so that it does
not get in your way by clicking *[[FOLD-HEADLINE:][Hide Tutorial for Future Sessions]]*.
To see it again later, you can open the *Tutorial* heading by clicking
on it as described below.
** Navigation
You can open and close headings (lines that start with =*=) by
clicking on them with the mouse or by hitting =tab= when the cursor is
on the heading line. This also works for numbered and dotted lists
which usually won't be needed but might happen by accident.

You can also open and close source blocks by clicking on the
=#+begin_src= line, =#+end_src= line, or any of the =#+header:=,
=#+caption:=, or =#+name:= lines associated with the block. =tab=
works in this case as well.
** Running Queries
:PROPERTIES:
:header-args:sparql: :url http://localhost:9999/blazegraph/sparql
:header-args:sparql+: :format text/csv
:END:

There are 3 ways to run query blocks.

1. You can click on the *Run Query ▶* button.
2. You can type =C-c C-c= when the cursor is on the source block.
   Usually this is done by holding =Ctrl= (=Cmd= on a mac) and then
   hitting the =c= key twice.
3. You can click on =# RUN:block=. This will open the
   results in a new Emacs buffer window.

   
*[[RUN:][Run Query ▶]]*
#+name: my-query
#+begin_src sparql
# :results table :var limit="10"
# RUN:block
SELECT distinct ?s1 ?s2 ?id ?dataset1 ?dataset2 ?species1 ?species2 ?award1 ?award2
WHERE {

    # Give me all subjects with duplicate IDs with unique datasets
    { SELECT ?id
      WHERE {
	?s1 a owl:NamedIndividual ; 
            TEMP:localId ?id ; 
            TEMP:hasDerivedInformationAsParticipant ?datasetx .
	?s2 a owl:NamedIndividual ; 
            TEMP:localId ?id ; 
            TEMP:hasDerivedInformationAsParticipant ?datasety .
	filter(?datasetx != ?datasety)
    } GROUP BY ?id having (count(?id) > 1)}

    ?s1 TEMP:localId ?id ;
        sparc:animalSubjectIsOfSpecies ?species1;
        TEMP:hasDerivedInformationAsParticipant ?dataset1 .
    ?s2 TEMP:localId ?id ;
        sparc:animalSubjectIsOfSpecies ?species2;
        TEMP:hasDerivedInformationAsParticipant ?dataset2 .
    filter(?s1 != ?s2)
    filter(STR(IRI(?s1)) < STR(IRI(?s2)))
    filter(?species1 != ?species2)
    filter(STR(IRI(?species1)) < STR(IRI(?species2)))

    ?dataset1 a owl:NamedIndividual ;
              TEMP:hasAwardNumber ?award1 .
    ?dataset2 a owl:NamedIndividual ;
              TEMP:hasAwardNumber ?award2 .
    filter(?dataset1 != ?dataset2)
    filter(STR(IRI(?dataset1)) < STR(IRI(?dataset2)))
    filter(?award1 != ?award2)
    filter(STR(IRI(?award1)) < STR(IRI(?award2)))
  
} order by ?id limit 8 # ?limit
#+end_src

#+RESULTS: my-query
| s1                                                                                               | s2                                                                                               | id     | dataset1                                                                         | dataset2                                                                         | species1                                       | species2                                       | award1                                               | award2                                               |
|--------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+--------+----------------------------------------------------------------------------------+----------------------------------------------------------------------------------+------------------------------------------------+------------------------------------------------+------------------------------------------------------+------------------------------------------------------|
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-1  | https://api.blackfynn.io/datasets/N:dataset:9b5f78ac-850a-43ab-aebe-c15b470a008b/subjects/sub-1  | sub-1  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:9b5f78ac-850a-43ab-aebe-c15b470a008b | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_10116 | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD024912 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-10 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-10 | sub-10 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-11 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-11 | sub-11 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-12 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-12 | sub-12 | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-4  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-4  | sub-4  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-4  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-4  | sub-4  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-4  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-4  | sub-4  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-4  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-4  | sub-4  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-4  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-4  | sub-4  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:83fdbd3f-6028-4276-b2f0-bc6691b0d3cb/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:83fdbd3f-6028-4276-b2f0-bc6691b0d3cb | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_10116 | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-5  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-5  | sub-5  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-6  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-6  | sub-6  | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024909 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-7  | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-7  | sub-7  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-7  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-7  | sub-7  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-7  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-7  | sub-7  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-7  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-7  | sub-7  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-7  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-7  | sub-7  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-7  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-7  | sub-7  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-8  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-8  | sub-8  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:7a338939-fd82-4dbe-a1c0-3c0632fdd7ef | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9606  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD024899 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-9  | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-9  | sub-9  | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |

*[[RUN:][Run Query ▶]]*
#+name: my-python
#+begin_src python :var data=my-query() :epilogue "return result"
from collections import defaultdict, OrderedDict
import itertools
def func(data):
    idmap = defaultdict(lambda: defaultdict(set))
    for row in data:
        subj1, subj2, local_id = row[0], row[1], row[2]
        idmap[subj1]['cluster'].add(subj2)
        idmap[subj1]['local_id'].add(local_id)
        value_pairs = [(row[i], row[i+1]) for i in range(3, len(row), 2)]
        value_pairs_len = len(value_pairs)
        for i, value_pair in enumerate(value_pairs):
            v1, v2 = value_pair
            idmap[subj1][i] |= set(value_pair)
    header = ['cluster', 'local_id'] + [i for i in range(value_pairs_len)] # todo: replace this with sparql headers if possible
    hardcoded_header =  ['classes', 'local_id', 'datasets', 'species', 'awards']
    columns = defaultdict(list)
    for subj in idmap:
        padding_max = max([len(v) for v in idmap[subj].values()])
        for colname, values in idmap[subj].items():
            values = list(values)
            values = [subj] + values if colname == 'cluster' else values
            padding = padding_max - len(values) if len(values) < padding_max else 0
            columns[colname] += values + ['-'] * padding + ['']
    table = [hardcoded_header] + [None] + list(itertools.izip_longest(*[columns[k] for k in header]))
    return table
result = func(data)
#+end_src

#+RESULTS: my-python
| classes                                                                                          | local_id | datasets                                                                         | species                                        | awards                                               |
|--------------------------------------------------------------------------------------------------+----------+----------------------------------------------------------------------------------+------------------------------------------------+------------------------------------------------------|
| https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807/subjects/sub-1  | sub-1    | https://api.blackfynn.io/datasets/N:dataset:64c64ed8-31b1-4011-80b6-21a873e8c807 | http://purl.obolibrary.org/obo/NCBITaxon_10090 | http://uri.interlex.org/temp/uris/awards/OT2OD024909 |
| https://api.blackfynn.io/datasets/N:dataset:9b5f78ac-850a-43ab-aebe-c15b470a008b/subjects/sub-1  | -        | https://api.blackfynn.io/datasets/N:dataset:9b5f78ac-850a-43ab-aebe-c15b470a008b | http://purl.obolibrary.org/obo/NCBITaxon_10116 | http://uri.interlex.org/temp/uris/awards/OT2OD024912 |
|                                                                                                  |          |                                                                                  |                                                |                                                      |
| https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f/subjects/sub-10 | sub-10   | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 |
| https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:60739e5f-5210-4d04-935d-9f2645b3977f | -                                              | -                                                    |
| https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | -                                              | -                                                    |
|                                                                                                  |          |                                                                                  |                                                |                                                      |
| https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203/subjects/sub-10 | sub-10   | https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5 | http://purl.obolibrary.org/obo/NCBITaxon_9615  | http://uri.interlex.org/temp/uris/awards/OT2OD025340 |
| https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14 | http://purl.obolibrary.org/obo/NCBITaxon_9825  | http://uri.interlex.org/temp/uris/awards/OT2OD025308 |
| https://api.blackfynn.io/datasets/N:dataset:be6c03c9-e427-488a-9dea-f4f64fca1f14/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:3951ecbd-e20f-4650-8385-1b45f4a9b7fb | -                                              | -                                                    |
| https://api.blackfynn.io/datasets/N:dataset:92f31530-41e6-4844-8ed8-6d1d534254f5/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1 | -                                              | -                                                    |
| https://api.blackfynn.io/datasets/N:dataset:6c059ef7-f94a-40af-ab5a-50f482737fc1/subjects/sub-10 | -        | https://api.blackfynn.io/datasets/N:dataset:02d6f93c-56cd-471b-bbb9-99f65f47d203 | -                                              | -                                                    |
|                                                                                                  |          |                                                                                  |                                                |                                                      |

*[[RUN:][Run Query ▶]]*
#+name: tutorial-query
#+begin_src sparql :results table :var limit="10"
# RUN:block
SELECT DISTINCT ?s ?p ?o
WHERE {
    ?s ?p ?o
} LIMIT ?limit
#+end_src

In addition it is possible to run query blocks with different
parameters and preserve the results.

There are two ways to run =#+call= statements.
1. You can click on the *Run Call ▶* button.
2. You can type =C-c C-c= anywhere on the =#+call= line.

*[[RUNC:][Run Call ▶]]*
#+call: tutorial-query(limit="1")

* Queries
:PROPERTIES:
:header-args:sparql: :url http://localhost:9999/blazegraph/sparql
:header-args:sparql+: :format text/csv
:END:
** labels
*** query
See the Blazegraph wiki on [[https://github.com/blazegraph/database/wiki/FullTextSearch][full text search]].

*[[RUN:][Run Query ▶]]*
#+name: query-by-label
#+header: :var label=(literal "[a-z0-9]*") limit="10"
#+begin_src sparql :results table :cache no
SELECT DISTINCT
# ?thing
?l_thing
WHERE {
    ?thing rdfs:label ?l_thing .
    ?l_thing bds:search ?label .
} LIMIT ?limit  # abuse of how sparql-mode works to make it possible to change the limit in a call
#+end_src
*** calls

*[[RUNC:][Run Call ▶]]*
#+call: query-by-label(label=(literal "heart"), limit="20")

** protocols
*** count
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :cache no
SELECT
(COUNT(DISTINCT ?protocol) as ?count_protocols)
WHERE {
    ?protocol a sparc:Protocol .
}
#+end_src

*** individuals
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :cache no
SELECT DISTINCT
?protocol
WHERE {
    ?protocol a sparc:Protocol .
}
#+end_src
** techniques
*[[RUN:][Run Query ▶]]*
# #+header: :var technique="tech:histology"
#+begin_src sparql :results table :cache no
SELECT DISTINCT
?protocol
?technique
# ?l_tech
WHERE {
    ?protocol rdf:type sparc:Protocol .
    ?protocol TEMP:protocolEmploysTechnique ?technique .
    # ?technique rdfs:label ?l_tech .
} ORDER BY ASC(?protocol) ASC(?technique)
#+end_src

** basic aspects
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :results table :cache no
SELECT DISTINCT ?protocol ?aspect
WHERE {
    ?protocol rdf:type sparc:Protocol .
    ?protocol TEMP:protocolInvolvesAspect ?ast .
    ?ast rdf:type protcur:aspect .
    ?ast TEMP:hasValue ?aspect .
} LIMIT 10
#+end_src

** dose aspects
*** species dose results

*[[RUNC:][Run Call ▶]]*
#+call: species-mg/kg("NCBITaxon:10116", "CHEBI:6121", "100")

*[[RUNC:][Run Call ▶]]*
#+call: species-mg/kg("NCBITaxon:10116", "CHEBI:6121", "1000")

*** species dose query
:PROPERTIES:
:visibility: folded
:END:
This query cannot be run by itself. It should be run buy using the
=#+call:= definitions above in [[*species does results][species dose results]].
#+name: species-mg/kg
#+begin_src sparql :var species=(identity nil) drug=(identity nil) limit=(identity nil)
SELECT DISTINCT
?dataset
?protocol

?label_drug
?value_lt

WHERE {
    VALUES ?t {protcur:invariant protcur:parameter} .
    ?ast_inv a ?t .
    ?ast_inv TEMP:hasValue ?bnode .
    ?bnode ilxtr:jsonRecordType <https://uilx.org/tgbugs/u/sparcur-protcur-json-ld/quantity> .
    ?bnode rdf:value ?value_lt .
    ?bnode TEMP:hasUnit <https://uilx.org/tgbugs/u/sparcur-protcur-json-ld/milligram%20%2F%20kilogram> .
    FILTER (?value_lt < ?limit)
    # OPTIONAL { ?bnode TEMP:hasUnit ?unit } .

    ?ast_drug a protcur:input .
    ?ast_drug TEMP:hasValue ?drug .
                            ?drug rdfs:label ?label_drug .
    ?ast_drug TEMP:protcurChildren+ ?ast_child .
    ?ast_child TEMP:hasValue ?bnode .

    ?protocol a sparc:Protocol .
    ?protocol TEMP:protocolInvolvesInput ?ast_drug .

    ?protocol TEMP:protocolInvolvesInput ?ast_in_sp .
    ?ast_in_sp rdf:type protcur:input .
    ?ast_in_sp TEMP:hasValue ?species .

    OPTIONAL { ?dataset TEMP:hasProtocol ?protocol } .

} ORDER BY ?label_input ?value_lt
#+end_src

** anaesthesia
*** Protocol Aspect
*[[RUN:][Run Query ▶]]*
#+name: query-str-asp-an
#+begin_src sparql :cache no
SELECT DISTINCT
?protocol
?action
WHERE {
    ?protocol a sparc:Protocol .
    ?protocol TEMPRAW:protocolInvolvesAspect ?action .
    FILTER regex(str(?action), "[Aa]na?es?the") .
}
#+end_src

*** Protocol Action
*[[RUN:][Run Query ▶]]*
#+name: query-str-verb-an
#+begin_src sparql :cache no
SELECT DISTINCT
?protocol
?action
WHERE {
    ?protocol a sparc:Protocol .
    ?protocol TEMPRAW:protocolInvolvesAction ?action .
    FILTER regex(str(?action), "[Aa]na?es?the") .
}
#+end_src

** inputs
*** query execution
**** ketamine

*[[RUNC:][Run Call ▶]]*
#+call: query-input-count("CHEBI:6121")

**** xylazine

*[[RUNC:][Run Call ▶]]*
#+call: query-input-count("CHEBI:92386")

**** KX

*[[RUNC:][Run Call ▶]]*
#+call: query-input-intersection("CHEBI:6121", "CHEBI:92386")

*** query definitions
:PROPERTIES:
:visibility: folded
:END:
**** single input
#+name: query-input-count
#+begin_src sparql :cache no :var input=(identity nil)
SELECT DISTINCT
#?protocol
(COUNT(DISTINCT ?protocol) as ?count_protocols)
WHERE {
    ?protocol rdf:type sparc:Protocol .
    ?protocol TEMP:protocolInvolvesInput ?ast_in .
    ?ast_in rdf:type protcur:input .
    ?ast_in TEMP:hasValue ?input .
}
#+end_src

#+name: query-input
#+begin_src sparql :cache no :var input=(identity nil)
SELECT DISTINCT
?protocol
#(COUNT(DISTINCT ?protocol) as ?count_protocols)
WHERE {
    ?protocol rdf:type sparc:Protocol .
    ?protocol TEMP:protocolInvolvesInput ?ast_in .
    ?ast_in rdf:type protcur:input .
    ?ast_in TEMP:hasValue ?input .
}
#+end_src
**** dual input
# TODO input output steps
#+name: query-input-intersection
#+begin_src sparql :cache no :var input_a=(identity nil) input_b=(identity nil)
SELECT DISTINCT
# ?protocol ?ast_in_a ?ast_in_b
(COUNT(DISTINCT ?protocol) as ?count_protocols)
WHERE {
    ?protocol rdf:type sparc:Protocol .
    ?protocol TEMP:protocolInvolvesInput ?ast_in_a .
    ?ast_in_a rdf:type protcur:input .
    ?ast_in_a TEMP:hasValue ?input_a .
    ?protocol TEMP:protocolInvolvesInput ?ast_in_b .
    ?ast_in_b rdf:type protcur:input .
    ?ast_in_b TEMP:hasValue ?input_b .
}
#+end_src
** datasets
*** instances
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :results table :cache no
SELECT DISTINCT
?dataset
?l_dataset
WHERE {
    ?dataset a sparc:Dataset .
    ?dataset rdfs:label ?l_dataset .
} LIMIT 10
#+end_src

*** with protocols
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :results table :cache no
SELECT DISTINCT
?dataset
?protocol
WHERE {
    ?dataset a sparc:Dataset .
    ?dataset rdfs:label ?l_dataset .
    ?dataset TEMP:hasProtocol ?protocol .
    ?protocol a sparc:Protocol .
} LIMIT 10
#+end_src

*** anatomy
**** datasets about heart
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :results table :cache no
SELECT DISTINCT
?dataset
?region
WHERE {
    ?dataset isAbout: ?region .
    ?region rdfs:label ?l_region .
    ?l_region bds:search "heart" .
}
#+end_src

**** datasets involving heart
*[[RUN:][Run Query ▶]]*
#+begin_src sparql :results table :cache no
SELECT DISTINCT
?dataset
?region
?l_region
WHERE {
    ?dataset a sparc:Dataset .
    ?dataset TEMP:involvesAnatomicalRegion ?region .
    ?region rdfs:label ?l_region .
    ?l_region bds:search "heart" .
}
#+end_src

* Usability testing :noexport:
:PROPERTIES:
:visibility: folded
:END:
** Examples
# TODO make it possible to update link target and description on click
Behavioral settings.
*[[OB-NOASK:][Run Queries Without Confirmation]]*

[[RUN:][RUN]]

#+begin_src elisp
(message "Yay I'm running!")
#+end_src

#+RESULTS:
: Yay I’m running!

*asdf*

/asdf/

*[[RUN:][Run Query ▶]]*
#+name: test-call
#+begin_src elisp
; RUN:Query
(message "Yay I'm running!")
#+end_src

#+RESULTS: test-call
: Yay I’m running!

*[[RUNP:][Run Query ▶]]*

#+RESULTS:
: Yay I’m running!

Unfortunately ~RUNP:~ doesn't quite work because it gets moved after the results block.


*[[RUNC:][Run Call ▶]]*
#+call: test-call()

#+RESULTS:
: Yay I’m running!

** Testing
Note that if you want to test gui applications with an alternate home directly
you need to symlink the [[file:~/.Xauthority]] file for the current session,
otherwise you will get a cryptic =No protocol specified= error followed by
some message that the display could not be opened, or is unavailable etc.
#+begin_src bash
mkdir /tmp/test/
ln -s ~/.Xauthority /tmp/test/
HOME=/tmp/test
#+end_src
** DONE hide property drawers completely for the user
https://stackoverflow.com/a/17492723 implements
=org-cycle-hide-drawers= which can make the property drawers
completely invisible. Once header args set in property drawers
can contain closures, this will be even more powerful.

Ultimately decided not to use this because it is simpler to
use =org-entry-put= to programmatically add property drawers
if/when they are needed for things like the tutorial.
** TODO version control
One of the trickier issues with this is how to make it possible to safely
play with the queries and explore without risk of damaging or destroying
them. Making it easy to move the query file to a new release is also
important. Alternately, having an upgrade mechanism built in so that
the new releases just replace the data without replacing this file.

The other possibility is that we use this file to download the release
and have it live outside/alongside the release. The problem with this is
that you really do need something that acts like a project folder unless
you are willing to take on the complexity of working with temp or cache
folders on a variety of operating systems. The project folder approach is
attractive because it puts hard boundaries on requirements, and it provides
a space for arbitrary conventions.

While and Org file can create its own environment, the only safe way to do
so is to have it create a containing folder and then move itself into it.

Otherwise collisions, klobbering, etc. will all show up at some
point. Having a file and a folder sit next to each other can lead to
all sorts of problems.
* Bootstrap :noexport:
:PROPERTIES:
:visibility: folded
:END:
=*-packages= vars need to be defvars, possibly local, so that they can
be superseeded using command line arguments or file local variables if
they are header arguments then they cannot be shadowed because the are
bound in a let form. On the other hand, disabling header arguments can
be done without having to have orgstrap installed or fighting with
Emacs' command line arguments --- something of a strange trade-off.
We might need both global variable and a header variable where both
have to be non-nil for the block to fire.

To disable vars set in the header here use =(identity nil)=.

# probably an implementation detail, but if multiple values are provided
# the first one appearing on the page wins, handy for this use case

# #+header: :var   test-dir="/tmp/build/release-2020-10-12T193129Z/"
#+header: :var   test-dir=(identity nil)
#+header: :var   orgstrap-emacs-packages="yes"
#+header: :var   enable-cua="yes"               enable-mouse-cycle="yes"
#+header: :var   enable-whiteboard="yes"        enable-faces="yes"
#+header: :var   enable-tab-bar="yes"
#+name: orgstrap
#+begin_src elisp :results none :lexical yes :noweb yes
;; (defvar orgstrap-emacs-packages t
;;   "Install Emacs packages needed to run this file.")

;; inhibit the splash

(setq inhibit-startup-screen t) ; amazingly orgstrap runs early enough that this works

;; common

<<common-defuns>>

;; install packages

(when orgstrap-emacs-packages
  "Install Emacs packages needed to run this file."
  <<orgstrap-packages>>)

;; usability defuns (needed by some options)

<<usability>>

;; local config options

(setq-local org-support-shift-select t) ; Org shift functionality is not really needed in this file

(defun orgstrap---noconfirm-eval-sparql (lang _body)
  "Run sparql queries without confirmation dialogue."
  ;; not much risk here, so better to just set it by default than to
  ;; force users to deal with the needless complexity
  (not (string= lang "sparql")))

(setq-local org-confirm-babel-evaluate #'orgstrap---noconfirm-eval-sparql)
(setq org-confirm-babel-evaluate nil)
(setq org-table-convert-region-max-lines 20000)

;; FIXME this is a hack to work around the fact that orgstrap restores
;; `org-confirm-babel-evaluate' from `ocbe' ... the fact that it is possible
;; to override `ocbe' from an another scope is ... worrying on the one hand
;; and potentially advantagous on the other
(setq-local ocbe org-confirm-babel-evaluate)

;; options (controlled via #+header:)

(when (and enable-cua (not cua-mode))
  "Enable familiar copy/paste keybindings."
  (cua-mode)
  ;; enable Cmd Shift Z for apple users Ctrl y for windows
  (when (fboundp #'undo-redo)
    (if (eq system-type 'darwin)
        (local-set-key "C-Z" #'undo-redo)
      (local-set-key "C-y" #'undo-redo))))

(when enable-tab-bar
  "Enable tab-bar-mode"
  (unless tab-bar-mode
    (tab-bar-mode)))

(when enable-whiteboard
  "Use the whiteboard theme."
  (load-theme 'whiteboard))

(when enable-mouse-cycle
  "Use left mouse to cycle"
  (orgstrap---mouse-cycle))

(when enable-faces
  (orgstrap---headline-faces)
  (set-face-attribute 'org-block-begin-line nil :extend t :foreground "black" :background "silver")
  (set-face-attribute 'org-block-end-line nil :extend t :foreground "black" :background "silver")
  (set-face-attribute 'org-block nil :extend t :background "white"))

;; local utility function (buffer local functions would be great ... don't even need namespaces)

(defun literal (string)
  "Utility function for sparql :vars that need to be escaped."
  (prin1-to-string string))

;; server defuns

<<blazegraph-server>>

;; start blazegraph

(unless (blazegraph-server-running-p)
  (let ((process (if test-dir
                     (let ((default-directory test-dir))
                       (blazegraph-server-process))
                   (blazegraph-server-process))))
    (message "Starting Blazegraph ...")
    (while (let ((status (process-status (process-name process))))
             (and (eq status 'run) (not (blazegraph-server-http-ok-p))))
      (sleep-for 0 100)))
  (blazegraph-create-tab-with-buffer))

;; check that server is up

(if (blazegraph-server-http-ok-p)
    ;; Once packages have been successfully installed hide the First Run heading.
    (orgstrap---fold-heading "Getting Started")
  (message "orgstrap failed see *Messages* tab for details."))
#+end_src
** Common
#+name: common-defuns
#+begin_src elisp
(defun orgstrap---fold-heading (&optional name)
  ;; https://orgmode.org/manual/Using-the-Property-API.html
  (save-excursion
    (if name
        (goto-char (org-find-exact-headline-in-buffer name))
      (org-previous-visible-heading 0))
    (org-entry-put nil "visibility" "folded")
    (save-buffer)))
#+end_src
** Packages
FIXME need a way to allow users to confirm/enable this.
#+name: orgstrap-packages
#+begin_src elisp
(require 'package)

(add-to-list
 'package-archives
 '("melpa" . "https://melpa.org/packages/")
 t)

(add-to-list
 'package-archives
 '("org" . "https://orgmode.org/elpa/")
 t)

(unless package--initialized
  (package-initialize))

(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(eval-when-compile
  (require 'use-package))

(setq use-package-always-ensure t)

(when (not (fboundp #'undo-redo))
  ;; Emacs' `undo-redo' is only available in Emacs >= 28
  ;; `undo-fu' has a backport that we can use
  (use-package undo-fu
    :init
    (defalias 'undo-redo #'undo-fu-only-undo "Backport `undo-redo'")))

(use-package sparql-mode)

(use-package org-plus-contrib
  :mode ("\\.org\\'" . org-mode)
  :init
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((sparql . t)
     (python . t))))
#+end_src
** Blazegraph Server
#+name: blazegraph-server
#+begin_src elisp
(defvar blazegraph-process-name "*blazegraph-server process*"
  "Name of the process and buffer for blazegraph.")

(defvar blazegraph-port 9999
  "Default port for blazegraph sparql endpoint.")

(defun blazegraph-options (&optional port prefixes journal)
  (let ((port (or port blazegraph-port))
        (prefixes (or prefixes "data/prefixes.conf"))
        (journal (or journal "data/blazegraph.jnl")))
    `((jetty.port . ,port)
      ;; (log4j.logger.com.bigdata . INFO)
      (com.bigdata.journal.AbstractJournal.file . ,journal)
      (com.bigdata.rdf.sail.sparql.PrefixDeclProcessor.additionalDeclsFile . ,prefixes))))

(defun blazegraph-server-process (&optional port prefixes journal)
  "Start blazegraph server at port PORT."
  (let* ((process-name blazegraph-process-name)
         (buffer (generate-new-buffer process-name))
         (options (blazegraph-options port prefixes journal))
         (options-cli (mapcar (lambda (pair)
                                (format "-D%s=%s" (car pair) (cdr pair)))
                              options)))
    (with-current-buffer buffer
      (let ((argv `(,process-name
                    ,(current-buffer)
                    "java"
                    "-server"
                    "-Xmx4g"
                    ,@options-cli
                    "-jar"
                    "opt/blazegraph.jar")))
        ;;(message "%s" argv)
        (apply #'start-process argv)))))

;;(defvar url-http-end-of-headers)

(defun url-head-ok (url)
  "Check if URL is up and OK using HTTP HEAD.
All errors are silenced."
  (let ((url-request-method "HEAD"))
    (condition-case nil
        (with-current-buffer (url-retrieve-synchronously url)
          ;;(buffer-substring (point-min) url-http-end-of-headers)
          (goto-char 0)
          (re-search-forward "^HTTP.+OK$"))
      (error nil))))

(defun blazegraph-server-http-ok-p (&optional port)
  "Returns t if if sparql endpoint is up on PORT."
  (let ((port (or port blazegraph-port)))
    (url-head-ok (format "http://localhost:%s/blazegraph/sparql" port))))

(defun blazegraph-server-running-p (&optional port)
  "Returns t if server is running otherwise nil.
Checks for child process, if no process checks sparql endpoint."
  (let ((process (get-process blazegraph-process-name))
        (port (or port blazegraph-port)))
    (or (and process (process-live-p process))
        (blazegraph-server-http-ok-p port))))

(defun blazegraph-server-stop ()
  "Stop the blazegraph server."
  (let ((process (get-process blazegraph-process-name)))
    (when process
      (prog1
          (interrupt-process process))
      ;; spin block until the process is dead so that
      ;; Emacs won't prompt when we try to exit
      (while (process-live-p process)
        (sleep-for 0 100)))))

(defun blazegraph-create-tab-with-buffer ()
  (when tab-bar-mode
    (tab-bar-new-tab 1)
    (switch-to-buffer blazegraph-process-name)
    (tab-bar-switch-to-prev-tab)))
#+end_src
** Usability
The default for =org-cycle-hook= is what causes the position of headings
to change when they are opened/closed. This is extremely undesirable when
using a mouse to toggle headings. https://emacs.stackexchange.com/a/31277

#+name: usability
#+begin_src elisp
;; mouse behavior

(defun orgstrap---safe-cycle (event &optional promote-to-region)
  "Bind this to mouse-1 for sane clickable cycling behavior."
  (interactive "e\np")
  (let ((face (get-char-property (point) 'face)))
    (unless (and face (listp face) (memq 'org-block face))
      (unwind-protect
          (progn
            (remove-hook 'org-cycle-hook #'org-optimize-window-after-visibility-change t)
            (org-cycle))
        (add-hook 'org-cycle-hook #'org-optimize-window-after-visibility-change nil t))))
  ;; have to chain `mouse-set-point' otherwise double click to highlight words etc. fails
  (mouse-set-point event promote-to-region))

(defun orgstrap---mouse-cycle ()
  "Allow left mouse to cycle org headings."
  (interactive)
  ;; reset `org-cycle-hook' as a local variable so that
  ;; we can add/remove individual hooks without messing
  ;; with the global behavior which might some day not
  ;; be purely single threaded (heh)
  (setq-local org-cycle-hook org-cycle-hook)
  (local-unset-key [mouse-1])
  (local-set-key [mouse-1] #'orgstrap---safe-cycle))

;; don't export buttons

(defun orgstrap---nox (path desc format)
  "Return nothing for export"
  "")

;; bold headlines

(defun orgstrap---headline-faces ()
  (mapcar (lambda (n) (set-face-attribute (intern (format "org-level-%s" n)) nil :bold t))
          (number-sequence 1 8)))

;; quit buttons

(org-link-set-parameters "QUIT" :export #'orgstrap---nox :follow
                         (lambda (&optional nothing)
                           (blazegraph-server-stop)
                           (save-buffers-kill-terminal 16)))

(org-link-set-parameters "KILL" :export #'orgstrap---nox :follow
                         (lambda (&optional nothing)
                           (blazegraph-server-stop)
                           (save-buffers-kill-terminal 0)))

;; hide tutorial

(org-link-set-parameters "FOLD-HEADLINE" :export #'orgstrap---nox :follow
                         (lambda (&optional nothing)
                           (orgstrap---fold-heading)))

;; use clickable links to run the next block

;;(org-link-set-parameters "run" :follow #'org-babel-ref-resolve)
;; Simple way to make a button that will run the next block.
(org-link-set-parameters "RUN" :export #'orgstrap---nox :follow
                         (lambda (&optional nothing)
                           (org-next-block nil)
                           (org-babel-execute-src-block)))

(org-link-set-parameters "RUNP" :export #'orgstrap---nox :follow
                         (lambda (&optional nothing)
                           (org-previous-block nil)
                           (org-babel-execute-src-block)))

;; link button to run the next #+call: TODO we should be able to do this with mouse-1?

(org-link-set-parameters "RUNC" :export #'orgstrap---nox :follow
                         (lambda (&optional nothing)
                           (save-excursion
                             (re-search-forward "#\\+call:")
                             (org-ctrl-c-ctrl-c))))

;; link buttons change the size of the text in the file

(defun recenter-on-mouse ()
  "Recenter the cursor so that it is under the mouse."
  ;; after much digging using `mouse-pixel-position' together
  ;; with `pos-at-x-y' seems to be what we want, `mouse-position'
  ;; and `window-edges' are decidedly NOT the right solution
  ;; `pos-at-x-y' is able to call into the C code to get something
  ;; much closer to what is produced by an actual mouse event
  ;; https://emacs.stackexchange.com/questions/30852 has the wrong solution
  (interactive)
  (let* ((mpp (mouse-pixel-position))
         (position-list (posn-at-x-y (cadr mpp)
                                     (cddr mpp)
                                     (selected-frame)
                                     nil))
         ;;(asdf (message "%s" hrm))
         (mouse-line (cdr (posn-actual-col-row position-list)))
         (cursor-line (- (line-number-at-pos)
                         (line-number-at-pos (window-start))))
         (offset (- mouse-line cursor-line)))
    ;;(message "ml: %s cl: %s offset: %s" mouse-line cursor-line offset)
    (scroll-down offset)))

(org-link-set-parameters "TEXT-LARGER" :export #'orsgrap--nox :follow
                         (lambda (&optional nothing)
                           (text-scale-adjust 1)
                           (recenter-on-mouse)))

(org-link-set-parameters "TEXT-SMALLER" :export #'orsgrap---nox :follow
                         (lambda (&optional nothing)
                           (text-scale-adjust -1)
                           (recenter-on-mouse)))

(org-link-set-parameters "TEXT-RESET" :export #'orsgrap---nox :follow
                         (lambda (&optional nothing)
                           (text-scale-adjust 0)
                           (recenter-on-mouse)))

;; link button to disable ob eval checks for sparql blocks in the current buffer

(org-link-set-parameters "OB-NOASK" :export #'orsgrap---nox :follow
                         (lambda (&optional nothing)
                           (setq-local org-confirm-babel-evaluate #'orgstrap---noconfirm-eval-sparql)
                           (message "SPARQL queries will now run without confirmation.")))
#+end_src
** Local variables :ARCHIVE:
# Local Variables:
# org-adapt-indentation: nil
# org-edit-src-content-indentation: 0
# org-hide-emphasis-markers: t
# mouse-wheel-progressive-speed: nil
# mouse-wheel-scroll-amount: (3 ((shift) . 3))
# eval: (progn (setq-local orgstrap-min-org-version "8.2.10") (let ((actual (org-version)) (need orgstrap-min-org-version)) (or (fboundp #'orgstrap--confirm-eval) (not need) (string< need actual) (string= need actual) (error "Your Org is too old! %s < %s" actual need))) (defun orgstrap-norm-func--prp-1\.1 (body) (let (print-quoted print-length print-level) (prin1-to-string (read (concat "(progn\n" body "\n)"))))) (unless (boundp 'orgstrap-norm-func) (defvar orgstrap-norm-func orgstrap-norm-func-name)) (defun orgstrap-norm-embd (body) (funcall orgstrap-norm-func body)) (unless (fboundp #'orgstrap-norm) (defalias 'orgstrap-norm #'orgstrap-norm-embd)) (defun orgstrap-org-src-coderef-regexp (_fmt &optional label) (let ((fmt org-coderef-label-format)) (format "\\([:blank:]*\\(%s\\)[:blank:]*\\)$" (replace-regexp-in-string "%s" (if label (regexp-quote label) "\\([-a-zA-Z0-9_][-a-zA-Z0-9_ ]*\\)") (regexp-quote fmt) nil t)))) (unless (fboundp #'org-src-coderef-regexp) (defalias 'org-src-coderef-regexp #'orgstrap-org-src-coderef-regexp)) (defun orgstrap--expand-body (info) (let ((coderef (nth 6 info)) (expand (if (org-babel-noweb-p (nth 2 info) :eval) (org-babel-expand-noweb-references info) (nth 1 info)))) (if (not coderef) expand (replace-regexp-in-string (org-src-coderef-regexp coderef) "" expand nil nil 1)))) (defun orgstrap--confirm-eval-portable (lang _body) (not (and (member lang '("elisp" "emacs-lisp")) (let* ((body (orgstrap--expand-body (org-babel-get-src-block-info))) (body-normalized (orgstrap-norm body)) (content-checksum (intern (secure-hash orgstrap-cypher body-normalized)))) (eq orgstrap-block-checksum content-checksum))))) (defalias 'orgstrap--confirm-eval #'orgstrap--confirm-eval-portable) (let ((ocbe org-confirm-babel-evaluate)) (setq-local orgstrap-norm-func orgstrap-norm-func-name) (setq-local org-confirm-babel-evaluate #'orgstrap--confirm-eval) (unwind-protect (save-excursion (org-babel-goto-named-src-block "orgstrap") (org-babel-execute-src-block)) (setq-local org-confirm-babel-evaluate ocbe) (org-set-startup-visibility))))
# End:
* Run Query ▶
